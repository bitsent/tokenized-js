
import BaseType, { UInt16, FixedChar3, AssetCode } from "./../../Base";
import QuantityIndex from "./../../actions/types/QuantityIndex";
import AssetReceiver from "./../../actions/types/AssetReceiver";

/**
 * # Asset Transfer
 * AssetTransfer is the data required to transfer an asset.
 */
class AssetTransfer extends BaseType {

  constructor() {
    super();
    super.requiredFieldNames = [  ];
    super.fieldNames = [ "ContractIndex", "AssetType", "AssetCode", "AssetSenders", "AssetReceivers" ];
  }

  public validate() {
    super.validateAllFields();
  }

  private _ContractIndex: UInt16;
  private _AssetType: FixedChar3;
  private _AssetCode: AssetCode;
  private _AssetSenders: QuantityIndex[];
  private _AssetReceivers: AssetReceiver[];

  
  /**
   * ### Contract Index 
   * Index of output containing the contract's address for this offset
   */
  public set ContractIndex(val: number) {
    this._ContractIndex = new UInt16(val);
    this._ContractIndex.validate();
  }
  /**
   * ### Contract Index 
   * Index of output containing the contract's address for this offset
   */
  public get ContractIndex() : number {
    return this._ContractIndex.value;
  }

  /**
   * ### Asset Type 
   * Three letter character that specifies the asset type. Example: COU
   */
  public set AssetType(val: string) {
    this._AssetType = new FixedChar3(val);
    this._AssetType.validate();
  }
  /**
   * ### Asset Type 
   * Three letter character that specifies the asset type. Example: COU
   */
  public get AssetType() : string {
    return this._AssetType.value;
  }

  /**
   * ### Asset Code 
   * A unique code that is used to identify the asset. It is generated by hashing the contract public key hash and the asset index. SHA256(contract PKH + asset index)
   */
  public set AssetCode(val: Uint8Array) {
    this._AssetCode = new AssetCode(val);
    this._AssetCode.validate();
  }
  /**
   * ### Asset Code 
   * A unique code that is used to identify the asset. It is generated by hashing the contract public key hash and the asset index. SHA256(contract PKH + asset index)
   */
  public get AssetCode() : Uint8Array {
    return this._AssetCode.value;
  }

  /**
   * ### Asset Senders 
   * Each element has the value of tokens to be spent from the input address, which is referred to by the index.
   */
  public set AssetSenders(val: QuantityIndex[]) {
    this._AssetSenders = val;
    this._AssetSenders.forEach(i => i.validate());
  }
  /**
   * ### Asset Senders 
   * Each element has the value of tokens to be spent from the input address, which is referred to by the index.
   */
  public get AssetSenders() : QuantityIndex[] {
    return this._AssetSenders.map(i => i);
  }

  /**
   * ### Asset Receivers 
   * Each element has the value of tokens to be received, the address, and an oracle signature if required.
   */
  public set AssetReceivers(val: AssetReceiver[]) {
    this._AssetReceivers = val;
    this._AssetReceivers.forEach(i => i.validate());
  }
  /**
   * ### Asset Receivers 
   * Each element has the value of tokens to be received, the address, and an oracle signature if required.
   */
  public get AssetReceivers() : AssetReceiver[] {
    return this._AssetReceivers.map(i => i);
  }
}

export default AssetTransfer;